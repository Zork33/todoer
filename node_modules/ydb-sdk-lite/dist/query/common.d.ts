import { Ydb } from '../../proto/bundle';
import { GrpcResponse } from '../api';
declare type IExecuteQueryResult = Ydb.Table.IExecuteQueryResult;
declare type IExecuteYqlResult = Ydb.Scripting.IExecuteYqlResult;
declare type IQueryResult = IExecuteQueryResult | IExecuteYqlResult;
export interface IQueryParams {
    [k: string]: unknown;
}
export interface IQueryTypedParams {
    [k: string]: Ydb.ITypedValue;
}
export declare function addTablePathPrefix(query: string, tablePathPrefix: string): string;
export declare function getQueryPayload(response: GrpcResponse, query: string, params?: IQueryParams): Uint8Array;
export declare function convertResultToJs({ resultSets }: IQueryResult): Record<string, unknown>[][];
export declare function buildTypedParams(query: string, params: IQueryParams): IQueryTypedParams;
export {};
//# sourceMappingURL=common.d.ts.map